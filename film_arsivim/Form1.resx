<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ERAEREAREQH/2Q==
</value>
  </data>
</root>